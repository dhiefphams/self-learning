group 'com.hienph.phd'
version '1.0-SNAPSHOT'

buildscript {
  repositories {
    mavenCentral()
  }

  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.1.RELEASE")
  }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

bootJar {
  baseName = 'gs-rest-service'
  version =  '0.1.0'
}

sourceCompatibility = 1.8

repositories {
  mavenCentral()
}

dependencies {
  compile group: 'org.tensorflow', name: 'tensorflow', version: '1.7.0'
  // install the numpy like for java
  compile group: 'org.bytedeco', name: 'javacpp', version: '1.4.1'
  compile group: 'org.nd4j', name: 'nd4j-native-platform', version: '0.9.1'
  compile group: 'io.reactivex.rxjava2', name: 'rxjava', version: '2.1.12'
  compile 'io.reactivex.rxjava2:rxjavafx:2.x.y'

  compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
//  compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'

  compile group: 'com.jfoenix', name: 'jfoenix', version: '8.0.3'
  compile group: 'com.google.inject', name: 'guice', version: '4.2.0'
  compile group: 'com.google.guava', name: 'guava', version: '24.1-jre'
  // make sure you copy the libopencv-java341.so to LD_LIBRARY_PATH
  compile files("/home/q/QtProjects/opencv/build/bin/opencv-341.jar")

  // the spring framework
  compile("org.springframework.boot:spring-boot-starter-web")
  testCompile('org.springframework.boot:spring-boot-starter-test')

  testCompile group: 'junit', name: 'junit', version: '4.12'
}

